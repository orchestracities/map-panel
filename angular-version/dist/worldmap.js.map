{"version":3,"sources":["../src/worldmap.js"],"names":["CIRCLE_RADIUS","POLYGON_MAGNIFY_RATIO","WorldMap","ctrl","mapContainer","validatedMetrics","timeSeries","map","geoMarkers","setDefaultValues","layerNames","elem","L","layerGroup","location","parseFloat","panel","mapCenterLatitude","mapCenterLongitude","layers","getLayers","sleepNote","sleepOpacity","hoverToWake","worldCopyJump","center","zoomControl","minZoom","maxZoom","attributionControl","setZoom","initialZoom","panTo","control","zoom","position","addTo","addLayersToMap","on","zoomLevel","getZoom","updateGeoLayers","selectedTileServer","TILE_SERVERS","tileServer","tileLayer","url","subdomains","reuseTiles","detectRetina","attribution","buildings","OSMBuildings","load","overlayMaps","i","length","forEach","layer","clearLayers","Object","keys","layerKey","minZoomShapes","hasLayer","removeLayer","addLayer","data","type","layersClusterType","faIcon","layersIcons","getGeoMarkerColorThesholds","getGeoMarkerColor","convertHex","disableClusterLevel","createClusterIcon","cluster","markers","getAllChildMarkers","value","valueId","layersColorsBinding","undefined","n","isNaN","options","Math","round","getChildCount","object","hex","color","icon","DivIcon","html","className","iconSize","Point","markersGJ","geoJSON","markerClusterGroup","iconCreateFunction","disableClusteringAtZoom","objectKey","lastObjectValues","geoJsonName","keyArray","k","toLowerCase","markerColor","latitude","longitude","centroid","turf","geometry","coordinates","newGJ","createGeoJson","newIcon","createIcon","error","console","warn","push","opacity","replace","r","parseInt","substring","g","b","objectValues","obj","layersColorType","layersColors","bindingValue","medium","high","layersColorsLow","layersColorsHigh","layersColorsMedium","thresholds","layersColorsThresholds","splitted","split","dataPoint","geoMarkerColor","myStyle","retVal","style","JSON","parse","createPopup","associateEvents","metrics","layerIcon","createMarker","createShape","shape","polygon","elementIcon","elementColor","markerProperties","AwesomeMarkers","prefix","marker","stickyPopupInfo","bindPopup","point","stickyLabels","openPopup","closePopup","event","currentTargetForChart","setTimeout","invalidateSize","flyTo","mapCenterMoved","legend","removeFrom","zoomFactor","getTranslation","measuresMetaInfo","measure","resp","filter","measure_"],"mappings":"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","sourcesContent":["/* eslint-disable id-length, no-unused-vars */\n\n/* Vendor specific */\nimport { defaultsDeep, isEqual } from 'lodash';\n\nimport './vendor/leaflet.awesome-markers/leaflet.awesome-markers.css!';\n\nimport * as L from './vendor/leaflet/leaflet';\nimport './vendor/leaflet.awesome-markers/leaflet.awesome-markers';\nimport './vendor/leaflet-sleep/Leaflet.Sleep';\nimport './vendor/leaflet.markercluster/leaflet.markercluster';\nimport './vendor/leaflet.markercluster/MarkerCluster.Default.css!';\nimport './vendor/leaflet.markercluster/MarkerCluster.css!';\nimport './vendor/osmbuildings/OSMBuildings-Leaflet';\nimport './vendor/fontawesome-free/css/fontawesome.min.css!';\nimport './vendor/fontawesome-free/css/v4-shims.min.css!';\n\n/* App Specific */\nimport { TILE_SERVERS, PLUGIN_PATH } from './definitions';\nimport {\n  dataTreatment, processData, getTimeSeries, getUpdatedChartSeries,\n  getDataPointStickyInfo\n} from './utils/map_utils';\n\nimport * as turf from './vendor/turf/turf';\n\nconst CIRCLE_RADIUS = 200;\nconst POLYGON_MAGNIFY_RATIO = 3;\n\nexport default class WorldMap {\n  constructor(ctrl, mapContainer) {\n    this.ctrl = ctrl;\n    this.mapContainer = mapContainer;\n    this.validatedMetrics = {};\n    this.timeSeries = {};\n    this.map = null;\n    this.geoMarkers = {};\n\n    this.setDefaultValues();\n  }\n\n  getLayers() {\n    return this.ctrl.layerNames.map((elem) => L.layerGroup());\n  }\n\n  createMap() {\n    const location = [ parseFloat(this.ctrl.panel.mapCenterLatitude), parseFloat(this.ctrl.panel.mapCenterLongitude) ];\n\n    this.layers = this.getLayers();\n\n    this.map = L.map(this.mapContainer,\n      {\n        sleepNote: false,\n        sleepOpacity: 0.8,\n        hoverToWake: false,\n        worldCopyJump: true,\n        center: location,\n        zoomControl: false,\n        minZoom: 3,\n        maxZoom: 20,\n        attributionControl: false,\n        layers: this.layers\n      });\n    this.map.setZoom(this.ctrl.panel.initialZoom);\n    this.map.panTo(location);\n    L.control.zoom({position: 'topright'}).addTo(this.map);\n    this.addLayersToMap();\n\n    this.map.on('zoomend', () => {\n      const zoomLevel = this.map.getZoom();\n      this.updateGeoLayers(zoomLevel);\n    });\n\n    const selectedTileServer = TILE_SERVERS[this.ctrl.tileServer];\n    L.tileLayer(selectedTileServer.url, {\n      maxZoom: 20,\n      subdomains: selectedTileServer.subdomains,\n      reuseTiles: true,\n      detectRetina: true,\n      attribution: selectedTileServer.attribution\n    }).addTo(this.map, true);\n\n    if (this.ctrl.panel.buildings) new OSMBuildings(this.map).load('https://{s}.data.osmbuildings.org/0.2/anonymous/tile/{z}/{x}/{y}.json');\n\n  }\n\n  addLayersToMap() {\n    this.overlayMaps = {};\n    for (let i = 0; i < this.ctrl.layerNames.length; i++) this.overlayMaps[this.ctrl.layerNames[i]] = this.layers[i];\n    L.control.layers({}, this.overlayMaps).addTo(this.map);\n  }\n\n  clearLayers() {\n    this.layers.forEach((layer) => layer.clearLayers());\n  }\n\n  updateGeoLayers(zoomLevel) {\n\n    Object.keys(this.geoMarkers).forEach((layerKey) => {\n      for (const layer of this.geoMarkers[layerKey]) {\n        if (zoomLevel < this.ctrl.panel.minZoomShapes) {\n          if (this.overlayMaps[layerKey].hasLayer(layer)) {\n            this.overlayMaps[layerKey].removeLayer(layer);\n          }\n        } else if (!this.overlayMaps[layerKey].hasLayer(layer)) {\n          this.overlayMaps[layerKey].addLayer(layer);\n        }\n      }\n    });\n  }\n\n\n  drawPoints() {\n    this.geoMarkers = {};\n\n    Object.keys(this.ctrl.data).forEach((layerKey) => {\n      const layer = this.ctrl.data[layerKey];\n\n      var type = this.ctrl.panel.layersClusterType[layerKey];\n      var faIcon = this.ctrl.panel.layersIcons[layerKey];\n\n      var panel = this;\n\n      var getGeoMarkerColorThesholds = this.getGeoMarkerColorThesholds;\n      var getGeoMarkerColor = this.getGeoMarkerColor;\n      var convertHex = this.convertHex;\n\n      var disableClusterLevel = this.ctrl.panel.disableClusterLevel;\n      if (type === 'none')\n        disableClusterLevel = 0;\n\n      var createClusterIcon = function (cluster) {\n        \n        var markers = cluster.getAllChildMarkers();\n\n        var value = 'NA';\n\n        var valueId = \"value\";\n        if (panel.ctrl.panel.layersColorsBinding[layerKey] !== undefined) {\n          valueId = panel.ctrl.panel.layersColorsBinding[layerKey];\n        }\n\n        switch(type) {\n          case 'average':\n            var n = 0;\n            for (var i = 0; i < markers.length; i++) {\n            \tn += isNaN(markers[i].options[valueId])? 0 : markers[i].options[valueId];\n            }\n            value = Math.round( n / markers.length * 10 ) / 10;\n            break;\n          case 'total':\n            var n = 0;\n            for (var i = 0; i < markers.length; i++) {\n              n += isNaN(markers[i].options[valueId])? 0 : markers[i].options[valueId];\n            }\n            value = n;\n            break;\n          default:\n             value = cluster.getChildCount();\n        }\n\n        var object = {\n          type: layerKey\n        }\n  \n        object[valueId] = value;\n\n        var hex = getGeoMarkerColor(object, panel);\n\n        var color = \"background-color: \" + hex + \"; opacity: 0.6\";\n        if (faIcon !== undefined){\n          var icon = \"<i class='fas fa-\" + faIcon + \" icon-white'></i><br/>\";\n          return new L.DivIcon({ html: '<div style=\"'+color+'\"><span class=\"double\">' + icon + value + '</span></div>', className: 'oc-cluster', iconSize: new L.Point(40, 40) });\n        }\n        return new L.DivIcon({ html: '<div style=\"'+color+'\"><span class=\"single\">' + value + '</span></div>', className: 'oc-cluster', iconSize: new L.Point(40, 40) });\n      }\n\n\n      \n\n      const markersGJ = L.geoJSON();\n      const markers = L.markerClusterGroup({iconCreateFunction: createClusterIcon, disableClusteringAtZoom: disableClusterLevel});\n\n      // for each layer\n      Object.keys(layer).forEach((objectKey) => {\n        const lastObjectValues = layer[objectKey][layer[objectKey].length - 1];\n        lastObjectValues.type = layerKey;\n\n        let geoJsonName = null;\n        const keyArray = Object.keys(lastObjectValues);\n        for (let k = 0; k < keyArray.length; k++) {\n          if (keyArray[k].toLowerCase() === 'geojson') {\n            geoJsonName = keyArray[k];\n            break;\n          }\n        }\n\n        const markerColor = this.getGeoMarkerColor(lastObjectValues, this);\n\n        if (geoJsonName !== null && lastObjectValues.latitude === undefined && lastObjectValues.longitude === undefined) {\n          const centroid = turf.centroid(lastObjectValues[geoJsonName]);\n          lastObjectValues.longitude = centroid.geometry.coordinates[0];\n          lastObjectValues.latitude = centroid.geometry.coordinates[1];\n        }\n\n        if (geoJsonName && lastObjectValues[geoJsonName] && lastObjectValues[geoJsonName].type !== 'Point') {\n          const newGJ = this.createGeoJson(lastObjectValues, geoJsonName, markerColor);\n          newGJ.addTo(markersGJ);\n        }\n        if (lastObjectValues.latitude && lastObjectValues.longitude && this.ctrl.panel.layersIcons[layerKey]) {\n          const newIcon = this.createIcon(lastObjectValues, markerColor);\n          try {\n            if (newIcon) markers.addLayer(newIcon);\n          } catch (error) { console.warn(layerKey); console.warn(error); }\n        }\n      });\n\n      this.overlayMaps[layerKey].addLayer(markers);\n      this.overlayMaps[layerKey].addLayer(markersGJ);\n\n      this.geoMarkers[layerKey] = this.geoMarkers[layerKey] || [];\n      this.geoMarkers[layerKey].push(markersGJ);\n    });\n  }\n\n\n  convertHex(hex,opacity) {\n      hex = hex.replace('#','');\n      var r = parseInt(hex.substring(0,2), 16);\n      var g = parseInt(hex.substring(2,4), 16);\n      var b = parseInt(hex.substring(4,6), 16);\n\n      return 'rgba('+r+','+g+','+b+','+opacity/100+')';\n  }\n\n  getGeoMarkerColor(objectValues, obj) {\n    if (obj.ctrl.panel.layersColorType[objectValues.type] === 'fix'){\n      return obj.ctrl.panel.layersColors[objectValues.type];\n    } else {  \n      const bindingValue = objectValues[obj.ctrl.panel.layersColorsBinding[objectValues.type]];\n      const {medium, high} = obj.getGeoMarkerColorThesholds(objectValues, obj);\n\n      if (bindingValue < medium) {\n        return obj.ctrl.panel.layersColorsLow[objectValues.type];\n      }\n      if (bindingValue > high) {\n        return obj.ctrl.panel.layersColorsHigh[objectValues.type];\n      }\n      return obj.ctrl.panel.layersColorsMedium[objectValues.type];\n    }\n  }\n\n  getGeoMarkerColorThesholds(objectValues, obj) {\n    const thresholds = obj.ctrl.panel.layersColorsThresholds[objectValues.type] || '';\n    const splitted = thresholds.split(',');\n    return {\n      medium: parseFloat(splitted[0]),\n      high: parseFloat(splitted[1]),\n    };\n  }\n\n  createGeoJson(dataPoint, geoJsonName, geoMarkerColor) {\n    const myStyle = {\n      'color': geoMarkerColor,\n      'weight': 5,\n      'opacity': 0.65\n    };\n    let retVal;\n    if (typeof dataPoint[geoJsonName] === 'object') {\n      retVal = L.geoJSON(dataPoint[geoJsonName], {\n        style: myStyle\n      });\n    } else {\n      retVal = L.geoJSON(JSON.parse(dataPoint[geoJsonName]), {\n        style: myStyle\n      });\n    }\n\n    this.createPopup(\n      this.associateEvents(retVal),\n      getDataPointStickyInfo(dataPoint, this.ctrl.panel.metrics)\n    );\n    return retVal;\n  }\n\n  createIcon(dataPoint, markerColor) {\n    // console.log(this.ctrl.panel.layersIcons)\n    if (!dataPoint || !dataPoint.type) return null;\n    const layerIcon = this.ctrl.panel.layersIcons[dataPoint.type];\n    const icon = layerIcon ? this.createMarker(dataPoint, layerIcon, markerColor) : this.createShape(dataPoint);\n    \n    this.createPopup(\n      this.associateEvents(icon),\n      getDataPointStickyInfo(dataPoint, this.ctrl.panel.metrics)\n    );\n\n    return icon;\n  }\n\n  createShape(dataPoint) {\n    let shape = L.polygon([\n          [dataPoint.latitude - (0.001 * POLYGON_MAGNIFY_RATIO), dataPoint.longitude - (0.0015 * POLYGON_MAGNIFY_RATIO)],\n          [dataPoint.latitude + (0.001 * POLYGON_MAGNIFY_RATIO), dataPoint.longitude],\n          [dataPoint.latitude - (0.001 * POLYGON_MAGNIFY_RATIO), dataPoint.longitude + (0.0015 * POLYGON_MAGNIFY_RATIO)],\n        ], {});\n\n    return shape;\n  }\n\n  createMarker(dataPoint, elementIcon, elementColor) {\n    const location = [dataPoint.latitude, dataPoint.longitude];\n\n    switch (elementColor)\n    {\n      case \"#56A64B\":\n      case \"#73BF69\":\n      case \"green\":\n        elementColor = 'green';\n        break;\n      case \"#19730E\":\n      case \"#37872D\":\n      case \"darkgreen\":\n        elementColor = 'darkgreen';\n        break;\n      case \"#96D98D\":\n      case \"#C8F2C2\":\n      case \"lightgreen\":\n        elementColor = 'lightgreen';\n        break;\n      case \"#F2CC0C\":\n      case \"#FADE2A\":\n      case \"#CC9D00\":\n      case \"#E0B400\":\n      case \"#FFEE52\":\n      case \"#FFF899\":\n      case \"yellow\":\n        elementColor = 'yellow';\n        break;\n      case \"#E02F44\":\n      case \"#F2495C\":\n      case \"red\":\n        elementColor = 'red';\n        break;\n      case \"#AD0317\":\n      case \"#C4162A\":\n      case \"darkred\":\n        elementColor = 'darkred';\n        break;\n      case \"#FF7383\":\n      case \"#FFA6B0\":\n      case \"lightred\":\n        elementColor = 'lightred';\n        break;\n      case \"#3274D9\":\n      case \"#5794F2\":\n      case \"blue\":\n        elementColor = 'blue';\n        break;\n      case \"#1250B0\":\n      case \"#1F60C4\":\n      case \"darkblue\":\n        elementColor = 'darkblue';\n        break;\n      case \"#8AB8FF\":\n      case \"#C0D8FF\":\n      case \"lightblue\":\n        elementColor = 'lightblue';\n        break;\n      case \"#FF780A\":\n      case \"#FF9830\":\n      case \"#E55400\":\n      case \"#FA6400\":\n      case \"#FFB357\":\n      case \"#FFCB7D\":\n      case \"orange\":\n        elementColor = 'orange';\n        break;\n      case \"#A352CC\":\n      case \"#B877D9\":\n      case \"#7C2EA3\":\n      case \"#8F3BB8\":\n      case \"#CA95E5\":\n      case \"#DEB6F2\":\n      case \"purple\":\n        elementColor = 'purple';\n        break;\n      default:\n         elementColor = 'green';\n    }\n\n    const markerProperties = {\n      icon: L.AwesomeMarkers.icon(\n        {\n          icon: elementIcon,\n          prefix: 'fa',\n          markerColor: (elementColor)\n        }\n      )\n    };\n    defaultsDeep(markerProperties, dataPoint);\n\n    return L.marker(location, markerProperties);\n  }\n\n  associateEvents(shape) {\n    return shape\n     //.on('click', () => this.updateVariable(shape))\n  }\n    /*\n  updateVariable(shape){\n    let variable = _.find(this.ctrl.variables, {'name': this.ctrl.panel.layersVariables[shape.options.type]});\n    console.debug(variable);\n    \n    if(variable) {\n      variable.current.text = shape.options.id;\n      variable.current.value = shape.options.id;\n\n      this.ctrl.variableSrv.updateOptions(variable).then(() => {\n        this.ctrl.variableSrv.variableUpdated(variable).then(() => {\n          this.ctrl.$scope.$emit('template-variable-value-updated');\n          this.ctrl.$scope.$root.$broadcast('refresh');\n        });\n      });\n    }\n  }\n*/\n  createPopup(shape, stickyPopupInfo) {\n    shape.bindPopup(stickyPopupInfo,\n      {\n        'offset': L.point(0, -2),\n        'className': 'worldmap-popup',\n        'closeButton': this.ctrl.panel.stickyLabels\n      });\n\n    if (!this.ctrl.panel.stickyLabels) {\n      shape.on('mouseover', function () { this.openPopup(); });\n      shape.on('mouseout', function () { this.closePopup(); });\n    }\n  }\n\n  setTarget(event) {\n    this.currentTargetForChart = event;\n  }\n\n  resize() {\n    setTimeout(() => {\n      this.map.invalidateSize();\n    }, 0);\n  }\n\n  panToMapCenter() {\n    const location = [parseFloat(this.ctrl.panel.mapCenterLatitude), parseFloat(this.ctrl.panel.mapCenterLongitude)];\n\n    /*    if ( 'Location Variable' === this.ctrl.panel.mapCenter && this.ctrl.isADiferentCity() ) {\n      console.log('diferent city detected')\n\n      this.ctrl.setNewCoords()\n        .then(() => {\n          console.debug('flying to a new location')\n          console.debug(location)\n          this.map.flyTo(location)\n          this.ctrl.refresh();\n        })\n        .catch(error => console.warn(error))\n      return ;\n    } */\n\n    this.map.flyTo(location);\n    this.ctrl.mapCenterMoved = false;\n  }\n\n  removeLegend() {\n    this.legend.removeFrom(this.map);\n    this.legend = null;\n  }\n\n  setZoom(zoomFactor) {\n    this.map.setZoom(parseInt(zoomFactor, 10));\n  }\n\n  setDefaultValues() {\n    Object.keys(this.ctrl.data).forEach((layerKey) => {\n      if (this.ctrl.panel.layersColorsBinding[layerKey] === undefined) {\n        this.ctrl.panel.layersColorsBinding[layerKey] = 'value';\n      }\n      if (this.ctrl.panel.layersColorsThresholds[layerKey] === undefined) {\n        this.ctrl.panel.layersColorsThresholds[layerKey] = '30, 50';\n      }\n\n      if (this.ctrl.panel.layersClusterType[layerKey] === undefined) {\n        this.ctrl.panel.layersClusterType[layerKey] = 'count';\n      }\n    \n      if (this.ctrl.panel.layersColorsLow[layerKey] === undefined) {\n        this.ctrl.panel.layersColorsLow[layerKey] = 'red';\n      }\n      if (this.ctrl.panel.layersColorsMedium[layerKey] === undefined) {\n        this.ctrl.panel.layersColorsMedium[layerKey] = 'orange';\n      }\n      if (this.ctrl.panel.layersColorsHigh[layerKey] === undefined) {\n        this.ctrl.panel.layersColorsHigh[layerKey] = 'green';\n      }\n    });\n  }\n}\n\nfunction getTranslation(measuresMetaInfo, measure) {\n  const resp = measuresMetaInfo.filter((measure_) => measure_[0].toLowerCase() === measure.toLowerCase());\n  return resp.length > 0 ? resp[0] : [measure, measure, null];\n}\n"],"file":"worldmap.js"}